version: "3.9"

services:
  kafka:
    image: apache/kafka:3.7.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_LOG_DIRS=/tmp/kraft-combined-logs
      - KAFKA_GROUP_COORDINATOR_TYPE=classic
      - KAFKA_INTER_BROKER_PROTOCOL_VERSION=3.6
      - KAFKA_LOG_MESSAGE_FORMAT_VERSION=3.6
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 10


  crawler:
    build:
      context: .
      args:
        SERVICE: orchestrator
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_DOCUMENT_TOPIC=documents
      - SEED_DIR=/app/testdata/pages
    depends_on:
      kafka:
        condition: service_healthy

  indexer:
    build:
      context: .
      args:
        SERVICE: indexer
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_DOCUMENT_TOPIC=documents
      - INDEXER_GROUP=indexer
      - SNAPSHOT_PATH=/data/index.snapshot.json
      - METRICS_ADDR=:9101
    volumes:
      - ./data:/data
    depends_on:
      kafka:
        condition: service_healthy

  searchapi:
    build:
      context: .
      args:
        SERVICE: searchapi
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_DOCUMENT_TOPIC=documents
      - SEARCH_GROUP=search-api
      - SNAPSHOT_PATH=/data/index.snapshot.json
      - SEARCH_HTTP_ADDR=:8080
      - METRICS_ADDR=:9102
    ports:
      - "8080:8080"
      - "9102:9102"
    volumes:
      - ./data:/data
    depends_on:
      kafka:
        condition: service_healthy
      indexer:
        condition: service_started

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      searchapi:
        condition: service_started
